version: '3.8'

volumes:
  postgres: {}
  django_media: {}
  django_static: {}

services:
  postgres:
    container_name: postgres
    image: postgres:14.5
    volumes:
      - postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=igmy
      - POSTGRES_PASSWORD=devpassword
      - POSTGRES_DB=postgres
    restart: always

  refactoring-backend:
    container_name: refactoring-backend
    build: .  # Dockerfile 을 찾는 경로
      # entrypoint: sh -c "poetry show"
    # entrypoint: sh -c "poetry run python manage.py collectstatic --no-input && poetry run python manage.py migrate && poetry run gunicorn config.wsgi --workers=5 -b 0.0.0.0:8000"
    entrypoint: sh -c "poetry run python manage.py collectstatic --no-input && poetry run gunicorn config.wsgi --workers=5 -b 0.0.0.0:8000"
    volumes:
      # - ./refactoring/:/app/
      - /etc/localtime:/etc/localtime:ro
      - django_media:/app/media/
      - django_static:/app/static/
    environment:
      - SECRET_KEY
      - DEBUG
      - POSTGRESQL_DB
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - DB_HOST
      - DB_PORT
    depends_on:
      - postgres
    restart: always

  nginx:
    container_name : nginx
    image: nginx:1.23.2-alpine
    ports:
      - "80:80"
    volumes:
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro  # 읽기 전용
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw  # 읽기/쓰기
      - django_media:/media/
      - django_static:/static/
    depends_on:
      - refactoring-backend
    restart: always
